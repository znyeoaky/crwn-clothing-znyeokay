{"ast":null,"code":"var _jsxFileName = \"/Users/nanye/Desktop/crwn-clothing/src/contexts/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useReducer } from 'react';\nimport { createAction } from '../utils/reducer/reducer.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); // check if quantity is equal to 1, if it is remove that item from the cart\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } // return back cartitems with matching cart item with reduced quantity\n\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\n\nconst CART_ACTION_TYPES = {\n  SET_IS_CART_OPEN: 'SET_IS_CART_OPEN',\n  SET_CART_ITEMS: 'SET_CART_ITEMS',\n  SET_CART_COUNT: 'SET_CART_COUNT',\n  SET_CART_TOTAL: 'SET_CART_TOTAL'\n};\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0\n};\n\nconst cartReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.SET_CART_ITEMS:\n      return { ...state,\n        ...payload\n      };\n\n    default:\n      throw new Error(`Unhandled type ${type} in cartReducer`);\n  }\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [{\n    cartCount,\n    cartTotal,\n    cartItems\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n\n  const updateCartItemsReducer = cartItems => {\n    // const newCartCount = cartItems.reduce(\n    //   (total, cartItem) => total + cartItem.quantity,\n    //   0\n    // );\n    // const newCartTotal = cartItems.reduce(\n    //   (total, cartItem) => total + cartItem.quantity * cartItem.price,\n    //   0\n    // );\n    const payload = {\n      cartItems,\n      cartCount: newCartCount,\n      cartTotal: newCartTotal\n    };\n    dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, payload));\n  }; // const addItemToCart = (productToAdd) => {\n  //   const newCartItems = addCartItem(cartItems, productToAdd);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n  // const removeItemToCart = (cartItemToRemove) => {\n  //   const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n  // const clearItemFromCart = (cartItemToClear) => {\n  //   const newCartItems = clearCartItem(cartItems, cartItemToClear);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"Pi96wqJ5DC/xVGqzCIB7CytznYc=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useReducer","createAction","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","CART_ACTION_TYPES","SET_IS_CART_OPEN","SET_CART_ITEMS","SET_CART_COUNT","SET_CART_TOTAL","INITIAL_STATE","isCartOpen","cartCount","cartTotal","cartReducer","state","action","type","payload","Error","clearCartItem","cartItemToClear","CartContext","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","CartProvider","children","dispatch","updateCartItemsReducer","newCartCount","newCartTotal","value","removeItemToCart"],"sources":["/Users/nanye/Desktop/crwn-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useReducer } from 'react';\n\nimport { createAction } from '../utils/reducer/reducer.utils';\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  // check if quantity is equal to 1, if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  // return back cartitems with matching cart item with reduced quantity\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nconst CART_ACTION_TYPES = {\n  SET_IS_CART_OPEN: 'SET_IS_CART_OPEN',\n  SET_CART_ITEMS: 'SET_CART_ITEMS',\n  SET_CART_COUNT: 'SET_CART_COUNT',\n  SET_CART_TOTAL: 'SET_CART_TOTAL',\n};\n\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0,\n};\n\nconst cartReducer = (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.SET_CART_ITEMS:\n      return {\n        ...state,\n        ...payload,\n      };\n    default:\n      throw new Error(`Unhandled type ${type} in cartReducer`);\n  }\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  const [{ cartCount, cartTotal, cartItems }, dispatch] = useReducer(\n    cartReducer,\n    INITIAL_STATE\n  );\n\n  const updateCartItemsReducer = (cartItems) => {\n    // const newCartCount = cartItems.reduce(\n    //   (total, cartItem) => total + cartItem.quantity,\n    //   0\n    // );\n\n    // const newCartTotal = cartItems.reduce(\n    //   (total, cartItem) => total + cartItem.quantity * cartItem.price,\n    //   0\n    // );\n\n    const payload = {\n      cartItems,\n      cartCount: newCartCount,\n      cartTotal: newCartTotal,\n    };\n\n    dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, payload));\n  };\n\n  // const addItemToCart = (productToAdd) => {\n  //   const newCartItems = addCartItem(cartItems, productToAdd);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n\n  // const removeItemToCart = (cartItemToRemove) => {\n  //   const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n\n  // const clearItemFromCart = (cartItemToClear) => {\n  //   const newCartItems = clearCartItem(cartItems, cartItemToClear);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}