{"ast":null,"code":"var _jsxFileName = \"/Users/nanye/Desktop/crwn-clothing/src/components/button/button.component.jsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton, ButtonSpinner } from './button.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n};\n\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\n\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    isLoading,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, {\n    disabled: isLoading,\n    ...otherProps,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(ButtonSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","ButtonSpinner","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","Button","children","isLoading","otherProps","CustomButton"],"sources":["/Users/nanye/Desktop/crwn-clothing/src/components/button/button.component.jsx"],"sourcesContent":["import {\n  BaseButton,\n  GoogleSignInButton,\n  InvertedButton,\n  ButtonSpinner\n} from './button.styles';\n\nexport const BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted',\n};\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) =>\n  ({\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n  }[buttonType]);\n\nconst Button = ({ children, buttonType, isLoading, ...otherProps }) => {\n  const CustomButton = getButton(buttonType);\n  return <CustomButton disabled={isLoading} {...otherProps}>\n    {isLoading ? <ButtonSpinner /> : children}\n  </CustomButton>;\n};\n\nexport default Button;\n"],"mappings":";AAAA,SACEA,UADF,EAEEC,kBAFF,EAGEC,cAHF,EAIEC,aAJF,QAKO,iBALP;;AAOA,OAAO,MAAMC,mBAAmB,GAAG;EACjCC,IAAI,EAAE,MAD2B;EAEjCC,MAAM,EAAE,gBAFyB;EAGjCC,QAAQ,EAAE;AAHuB,CAA5B;;AAMP,MAAMC,SAAS,GAAG;EAAA,IAACC,UAAD,uEAAcL,mBAAmB,CAACC,IAAlC;EAAA,OACf;IACC,CAACD,mBAAmB,CAACC,IAArB,GAA4BL,UAD7B;IAEC,CAACI,mBAAmB,CAACE,MAArB,GAA8BL,kBAF/B;IAGC,CAACG,mBAAmB,CAACG,QAArB,GAAgCL;EAHjC,EAICO,UAJD,CADe;AAAA,CAAlB;;AAOA,MAAMC,MAAM,GAAG,QAAwD;EAAA,IAAvD;IAAEC,QAAF;IAAYF,UAAZ;IAAwBG,SAAxB;IAAmC,GAAGC;EAAtC,CAAuD;EACrE,MAAMC,YAAY,GAAGN,SAAS,CAACC,UAAD,CAA9B;EACA,oBAAO,QAAC,YAAD;IAAc,QAAQ,EAAEG,SAAxB;IAAA,GAAuCC,UAAvC;IAAA,UACJD,SAAS,gBAAG,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QAAH,GAAuBD;EAD5B;IAAA;IAAA;IAAA;EAAA,QAAP;AAGD,CALD;;KAAMD,M;AAON,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}