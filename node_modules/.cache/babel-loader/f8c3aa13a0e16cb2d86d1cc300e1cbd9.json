{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux'; // import logger from 'redux-logger';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from './root-reducer';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['user']\n};\n/*\n  key: We want to start from the root level.\n  storage(shorthand): So by default in any web browser, \n  this will just use local storage, which is what we want.\n  blacklist: an array of strings(root-reducer.js), which reducer you don't want to persist.\n*/\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWares = [loggerMiddleware]; // const middleWares = [process.env.NODE_ENV === 'development' && logger].filter(\n//   Boolean\n// );\n\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\nexport const persistor = persistStore(store);","map":{"version":3,"names":["compose","createStore","applyMiddleware","persistStore","persistReducer","storage","rootReducer","persistConfig","key","blacklist","persistedReducer","middleWares","loggerMiddleware","composedEnhancers","store","undefined","persistor"],"sources":["/Users/nanye/Desktop/crwn-clothing/src/store/store.js"],"sourcesContent":["import { compose, createStore, applyMiddleware } from 'redux';\n// import logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from './root-reducer';\n\n\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['user'],\n};\n/*\n  key: We want to start from the root level.\n  storage(shorthand): So by default in any web browser, \n  this will just use local storage, which is what we want.\n  blacklist: an array of strings(root-reducer.js), which reducer you don't want to persist.\n*/\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleWares = [loggerMiddleware];\n// const middleWares = [process.env.NODE_ENV === 'development' && logger].filter(\n//   Boolean\n// );\n\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\n\nexport const store = createStore(\n  persistedReducer, \n  undefined, \n  composedEnhancers\n);\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD,C,CACA;;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAIA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBH,OAFoB;EAGpBI,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAGN,cAAc,CAACG,aAAD,EAAgBD,WAAhB,CAAvC;AAEA,MAAMK,WAAW,GAAG,CAACC,gBAAD,CAApB,C,CACA;AACA;AACA;;AAEA,MAAMC,iBAAiB,GAAGb,OAAO,CAACE,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CAAjC;AAEA,OAAO,MAAMG,KAAK,GAAGb,WAAW,CAC9BS,gBAD8B,EAE9BK,SAF8B,EAG9BF,iBAH8B,CAAzB;AAMP,OAAO,MAAMG,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B"},"metadata":{},"sourceType":"module"}