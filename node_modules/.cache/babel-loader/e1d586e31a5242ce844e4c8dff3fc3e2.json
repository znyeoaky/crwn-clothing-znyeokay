{"ast":null,"code":"import { createSelector } from 'reselect';\nim;\n\nconst selectCartReducer = state => state.cart; //state type ?? Parameter 'state' implicitly has an 'any' type.ts(7006)\n// getting the actual cart items off of this slice of our state.\n\n\nexport const selectCartItems = createSelector([selectCartReducer], cart => cart.cartItems); // Which is equal to create selector, receiving select cart reducer.\n\nexport const selectIsCartOpen = createSelector([selectCartReducer], cart => cart.isCartOpen); //where actually get the total value\n\nexport const selectCartCount = createSelector([selectCartItems], cartItems => cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/nanye/Desktop/crwn-clothing/src/store/cart/cart.selector.ts"],"names":["createSelector","im","selectCartReducer","state","cart","selectCartItems","cartItems","selectIsCartOpen","isCartOpen","selectCartCount","reduce","total","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEAC,EAAE;;AAEF,MAAMC,iBAAiB,GAAIC,KAAD,IAA4CA,KAAK,CAACC,IAA5E,C,CACA;AAIA;;;AACA,OAAO,MAAMC,eAAe,GAAGL,cAAc,CAC3C,CAACE,iBAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACE,SAF4B,CAAtC,C,CAKP;;AACA,OAAO,MAAMC,gBAAgB,GAAGP,cAAc,CAC5C,CAACE,iBAAD,CAD4C,EAE3CE,IAAD,IAAUA,IAAI,CAACI,UAF6B,CAAvC,C,CAKP;;AACA,OAAO,MAAMC,eAAe,GAAGT,cAAc,CAAC,CAACK,eAAD,CAAD,EAAqBC,SAAD,IAC/DA,SAAS,CAACI,MAAV,CAAiB,CAACC,KAAD,EAAQC,QAAR,KAAqBD,KAAK,GAAGC,QAAQ,CAACC,QAAvD,EAAiE,CAAjE,CAD2C,CAAtC;AAIP,OAAO,MAAMC,eAAe,GAAGd,cAAc,CAAC,CAACK,eAAD,CAAD,EAAqBC,SAAD,IAC/DA,SAAS,CAACI,MAAV,CACE,CAACC,KAAD,EAAQC,QAAR,KAAqBD,KAAK,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAD5D,EAEE,CAFF,CAD2C,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\nimport { CartState } from './cart.reducer';\nim\n\nconst selectCartReducer = (state: { cart: CartState; }): CartState => state.cart;\n//state type ?? Parameter 'state' implicitly has an 'any' type.ts(7006)\n\n\n\n// getting the actual cart items off of this slice of our state.\nexport const selectCartItems = createSelector(\n  [selectCartReducer],\n  (cart) => cart.cartItems\n);\n\n// Which is equal to create selector, receiving select cart reducer.\nexport const selectIsCartOpen = createSelector(\n  [selectCartReducer],\n  (cart) => cart.isCartOpen\n);\n\n//where actually get the total value\nexport const selectCartCount = createSelector([selectCartItems], (cartItems) =>\n  cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0)\n);\n\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\n  cartItems.reduce(\n    (total, cartItem) => total + cartItem.quantity * cartItem.price,\n    0\n  )\n);\n"]},"metadata":{},"sourceType":"module"}