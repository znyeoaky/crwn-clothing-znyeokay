{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCbGoYmA1e-UcIu_V6IZFNb7oe-Ro3MhF0\",\n  authDomain: \"crwn-clothing-db-a29ac.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-a29ac\",\n  storageBucket: \"crwn-clothing-db-a29ac.appspot.com\",\n  messagingSenderId: \"327020484223\",\n  appId: \"1:327020484223:web:bf1a371a1c941dbe54114a\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => docSnapshot.data());\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error);\n    }\n  }\n\n  return userSnapshot;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = onAuthStateChanged(auth, userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","docs","map","docSnapshot","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback","getCurrentUser","Promise","resolve","reject","unsubscribe"],"sources":["/Users/nanye/Desktop/crwn-clothing/src/utils/firebase/firebase.utils.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  NextOrObserver,\n  User\n} from 'firebase/auth';\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n  collection,\n  writeBatch,\n  query,\n  getDocs,\n  QueryDocumentSnapshot\n} from 'firebase/firestore';\nimport { Category } from '../../store/categories/categories.types';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCbGoYmA1e-UcIu_V6IZFNb7oe-Ro3MhF0\",\n  authDomain: \"crwn-clothing-db-a29ac.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-a29ac\",\n  storageBucket: \"crwn-clothing-db-a29ac.appspot.com\",\n  messagingSenderId: \"327020484223\",\n  appId: \"1:327020484223:web:bf1a371a1c941dbe54114a\"\n};\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\n\nexport type ObjectToAdd = {\n  title: string;\n};\n\nexport const addCollectionAndDocuments = async <T extends ObjectToAdd> (\n  collectionKey: string,\n  objectsToAdd: T[]\n  // field\n): Promise<void> => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n\n  objectsToAdd.forEach((object) => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n\n  await batch.commit();\n  console.log('done');\n};\n\n\n\nexport const getCategoriesAndDocuments = async (): Promise<Category[]> => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(\n    (docSnapshot) => docSnapshot.data() as Category\n  );\n};\n\nexport type AdditionalInformation = {\n  displayName?: string;\n};\n\n\nexport type UserData = {\n  createAt: Date;\n  displayName: string;\n  email: string;\n}\n\n\nexport const createUserDocumentFromAuth = async (\n  userAuth: User,\n  additionalInformation = {}\n): Promise<void | QueryDocumentSnapshot<UserData>> => {\n  if (!userAuth) return;\n\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log('error creating the user', error);\n    }\n  }\n\n  return userSnapshot as QueryDocumentSnapshot<UserData>;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (\n  email: string, password: string) => {\n  if (!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (\n  email:string, password:string) => {\n  if (!email || !password) return;\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback: NextOrObserver<User>) =>\n  onAuthStateChanged(auth, callback);\n\nexport const getCurrentUser = (): Promise<User | null> => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = onAuthStateChanged(\n      auth,\n      (userAuth) => {\n        unsubscribe();\n        resolve(userAuth);\n      },\n      reject\n    );\n  });\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}