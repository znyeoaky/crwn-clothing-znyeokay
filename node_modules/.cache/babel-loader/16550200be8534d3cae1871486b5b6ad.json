{"ast":null,"code":"import { call as _call } from \"redux-saga/effects\";\nimport { all as _all } from \"redux-saga/effects\";\nimport { put as _put } from \"redux-saga/effects\";\nimport { takeLatest as _takeLatest } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from './user.types';\nimport { signInSuccess, signInFailed, signUpSuccess, signUpFailed, signOutSuccess, signOutFailed } from './user.action';\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInAuthUserWithEmailAndPassword, createAuthUserWithEmailAndPassword, signOutUser } from '../../utils/firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield _call(createUserDocumentFromAuth, userAuth, additionalDetails);\n\n    if (userSnapshot) {\n      yield _put(signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n      }));\n    }\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield _call(signInWithGooglePopup);\n    yield _call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\n;\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const userCredential = yield _call(signInAuthUserWithEmailAndPassword, email, password);\n\n    if (userCredential) {\n      const {\n        user\n      } = userCredential;\n      yield _call(getSnapshotFromUserAuth, user);\n    }\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield _call(getCurrentUser);\n    if (!userAuth) return;\n    yield _call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\n;\nexport function* signUp(_ref2) {\n  let {\n    payload: {\n      email,\n      password,\n      displayName\n    }\n  } = _ref2;\n\n  try {\n    const {\n      user\n    } = yield _call(createAuthUserWithEmailAndPassword, email, password);\n    yield _put(signUpSuccess(user, {\n      displayName\n    }));\n  } catch (error) {\n    yield _put(signUpFailed(error));\n  }\n}\n;\nexport function* signInAfterSignUp(_ref3) {\n  let {\n    payload: {\n      user,\n      additionalDetails\n    }\n  } = _ref3;\n  yield _call(getSnapshotFromUserAuth, user, additionalDetails);\n}\nexport function* signOut() {\n  try {\n    yield _call(signOutUser);\n    yield _put(signOutSuccess());\n  } catch (error) {\n    yield _put(signOutFailed(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield _takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onCheckUserSession() {\n  yield _takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onEmailSignInStart() {\n  yield _takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onSignUpStart() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n}\n;\nexport function* onSignUpSuccess() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n;\nexport function* onSignOutStart() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n}\n;\nexport function* onSignOutSuccess() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_OUT_SUCCESS, signOut);\n}\n;\nexport function* onSignOutFailed() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_OUT_FAILED, signOut);\n}\n;\nexport function* userSagas() {\n  yield _all([_call(onCheckUserSession), _call(onGoogleSignInStart), _call(onEmailSignInStart), _call(onSignUpStart), _call(onSignUpSuccess), _call(onSignOutStart)]);\n}","map":{"version":3,"names":["USER_ACTION_TYPES","signInSuccess","signInFailed","signUpSuccess","signUpFailed","signOutSuccess","signOutFailed","getCurrentUser","createUserDocumentFromAuth","signInWithGooglePopup","signInAuthUserWithEmailAndPassword","createAuthUserWithEmailAndPassword","signOutUser","getSnapshotFromUserAuth","userAuth","additionalDetails","userSnapshot","call","put","id","data","error","signInWithGoogle","user","signInWithEmail","payload","email","password","userCredential","isUserAuthenticated","signUp","displayName","signInAfterSignUp","signOut","onGoogleSignInStart","takeLatest","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onSignOutStart","SIGN_OUT_START","onSignOutSuccess","SIGN_OUT_SUCCESS","onSignOutFailed","SIGN_OUT_FAILED","userSagas","all"],"sources":["/Users/nanye/Desktop/crwn-clothing/src/store/user/user.saga.ts"],"sourcesContent":["import { takeLatest, put, all, call } from 'typed-redux-saga/macro';\nimport { User } from 'firebase/auth';\nimport { USER_ACTION_TYPES } from './user.types';\nimport {\n  signInSuccess,\n  signInFailed,\n  signUpSuccess,\n  signUpFailed,\n  signOutSuccess,\n  signOutFailed,\n  EmailSignInStart,\n  SignUpStart,\n  Signinst\n} from './user.action';\nimport {\n  getCurrentUser,\n  createUserDocumentFromAuth,\n  signInWithGooglePopup,\n  signInAuthUserWithEmailAndPassword,\n  createAuthUserWithEmailAndPassword,\n  signOutUser,\n  AdditionalInformation,\n} from '../../utils/firebase/firebase.utils';\n\n\nexport function* getSnapshotFromUserAuth(\n  userAuth:User, \n  additionalDetails?:AdditionalInformation\n) {\n  try {\n    const userSnapshot = yield* call(\n      createUserDocumentFromAuth,\n      userAuth,\n      additionalDetails\n    );\n    if(userSnapshot){\n      yield* put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    }\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n};\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield* call(signInWithGooglePopup);\n    yield* call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n};\n\nexport function* signInWithEmail(\n  { payload: { email, password } }: EmailSignInStart) {\n  try {\n    const userCredential = yield* call(\n      signInAuthUserWithEmailAndPassword,\n      email,\n      password\n    );\n\n    if(userCredential){\n      const { user } = userCredential;\n      yield* call(getSnapshotFromUserAuth, user);\n    }\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n};\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield* call(getCurrentUser);\n    if (!userAuth) return;\n    yield* call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n};\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield* call(\n      createAuthUserWithEmailAndPassword,\n      email,\n      password\n    );\n    yield* put(signUpSuccess(user, { displayName }));\n  } catch (error) {\n    yield* put(signUpFailed(error as Error));\n  }\n};\n\nexport function* signInAfterSignUp({ payload: { user, additionalDetails } }) {\n  yield* call(getSnapshotFromUserAuth, user, additionalDetails);\n}\n\nexport function* signOut() {\n  try {\n    yield* call(signOutUser);\n    yield* put(signOutSuccess());\n  } catch (error) {\n    yield* put(signOutFailed(error as Error));\n  }\n};\n\nexport function* onGoogleSignInStart() {\n  yield* takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onCheckUserSession() {\n  yield* takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n};\n\nexport function* onEmailSignInStart() {\n  yield* takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\nexport function* onSignUpStart() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n};\n\nexport function* onSignUpSuccess() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n};\n\nexport function* onSignOutStart() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n};\nexport function* onSignOutSuccess() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_OUT_SUCCESS, signOut);\n};\nexport function* onSignOutFailed() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_OUT_FAILED, signOut);\n};\n\nexport function* userSagas() {\n  yield* all([\n    call(onCheckUserSession),\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n    call(onSignOutStart),\n  ]);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}