{"ast":null,"code":"import { USER_ACTION_TYPES } from './user.types';\nimport { createAction, withMatcher } from '../../utils/reducer/reducer.utils';\n// export type SignUpSuccess = ActionWithPayload<>;\n// export type SignUpFailed = ActionWithPayload<>;\n// export type SignOutStart = ActionWithPayload<>;\n// export type SignOutSuccess = ActionWithPayload<>;\n// export type SignOutFailed = ActionWithPayload<>;\nexport const checkUserSession = withMatcher(() => createAction(USER_ACTION_TYPES.CHECK_USER_SESSION));\nexport const setCurrentUser = withMatcher(user => createAction(USER_ACTION_TYPES.SET_CURRENT_USER, user));\nexport const googleSignInStart = withMatcher(() => createAction(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START));\nexport const emailSignInStart = withMatcher((email, password) => createAction(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, {\n  email,\n  password\n}));\nexport const signInSuccess = user => createAction(USER_ACTION_TYPES.SIGN_IN_SUCCESS, user);\nexport const signInFailed = error => createAction(USER_ACTION_TYPES.SIGN_IN_FAILED, error); //\n\nexport const signUpStart = withMatcher((email, password, displayName) => createAction(USER_ACTION_TYPES.SIGN_UP_START, {\n  email,\n  password,\n  displayName\n}));\nexport const signUpSuccess = withMatcher((user, additionalDetails) => createAction(USER_ACTION_TYPES.SIGN_UP_SUCCESS, {\n  user,\n  additionalDetails\n}));\nexport const signUpFailed = withMatcher(error => createAction(USER_ACTION_TYPES.SIGN_UP_FAILED, error));\nexport const signOutStart = withMatcher(() => createAction(USER_ACTION_TYPES.SIGN_OUT_START));\nexport const signOutSuccess = withMatcher(() => createAction(USER_ACTION_TYPES.SIGN_OUT_SUCCESS));\nexport const signOutFailed = withMatcher(error => createAction(USER_ACTION_TYPES.SIGN_OUT_FAILED, error));","map":{"version":3,"sources":["/Users/nanye/Desktop/crwn-clothing/src/store/user/user.action.ts"],"names":["USER_ACTION_TYPES","createAction","withMatcher","checkUserSession","CHECK_USER_SESSION","setCurrentUser","user","SET_CURRENT_USER","googleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","email","password","EMAIL_SIGN_IN_START","signInSuccess","SIGN_IN_SUCCESS","signInFailed","error","SIGN_IN_FAILED","signUpStart","displayName","SIGN_UP_START","signUpSuccess","additionalDetails","SIGN_UP_SUCCESS","signUpFailed","SIGN_UP_FAILED","signOutStart","SIGN_OUT_START","signOutSuccess","SIGN_OUT_SUCCESS","signOutFailed","SIGN_OUT_FAILED"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAAqE,mCAArE;AAYA;AACA;AACA;AACA;AACA;AAGA,OAAO,MAAMC,gBAAgB,GAAGD,WAAW,CAAC,MAC1CD,YAAY,CAACD,iBAAiB,CAACI,kBAAnB,CAD6B,CAApC;AAGP,OAAO,MAAMC,cAAc,GAAGH,WAAW,CAAEI,IAAD,IACxCL,YAAY,CAACD,iBAAiB,CAACO,gBAAnB,EAAqCD,IAArC,CAD2B,CAAlC;AAGP,OAAO,MAAME,iBAAiB,GAAGN,WAAW,CAAC,MAC3CD,YAAY,CAACD,iBAAiB,CAACS,oBAAnB,CAD8B,CAArC;AAGP,OAAO,MAAMC,gBAAgB,GAAGR,WAAW,CAAC,CAACS,KAAD,EAAgBC,QAAhB,KAC1CX,YAAY,CAACD,iBAAiB,CAACa,mBAAnB,EAAwC;AAAEF,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAxC,CAD6B,CAApC;AAGP,OAAO,MAAME,aAAa,GAAIR,IAAD,IAC3BL,YAAY,CAACD,iBAAiB,CAACe,eAAnB,EAAoCT,IAApC,CADP;AAGP,OAAO,MAAMU,YAAY,GAAIC,KAAD,IAC1BhB,YAAY,CAACD,iBAAiB,CAACkB,cAAnB,EAAmCD,KAAnC,CADP,C,CAGP;;AACA,OAAO,MAAME,WAAW,GAAGjB,WAAW,CAAC,CACrCS,KADqC,EACvBC,QADuB,EACNQ,WADM,KAErCnB,YAAY,CAACD,iBAAiB,CAACqB,aAAnB,EAAkC;AAC5CV,EAAAA,KAD4C;AAE5CC,EAAAA,QAF4C;AAG5CQ,EAAAA;AAH4C,CAAlC,CAFwB,CAA/B;AAQP,OAAO,MAAME,aAAa,GAAGpB,WAAW,CAAC,CAACI,IAAD,EAAYiB,iBAAZ,KACvCtB,YAAY,CAACD,iBAAiB,CAACwB,eAAnB,EAAoC;AAAElB,EAAAA,IAAF;AAAQiB,EAAAA;AAAR,CAApC,CAD0B,CAAjC;AAGP,OAAO,MAAME,YAAY,GAAGvB,WAAW,CAAEe,KAAD,IACtChB,YAAY,CAACD,iBAAiB,CAAC0B,cAAnB,EAAmCT,KAAnC,CADyB,CAAhC;AAGP,OAAO,MAAMU,YAAY,GAAGzB,WAAW,CAAC,MACtCD,YAAY,CAACD,iBAAiB,CAAC4B,cAAnB,CADyB,CAAhC;AAGP,OAAO,MAAMC,cAAc,GAAG3B,WAAW,CAAC,MACxCD,YAAY,CAACD,iBAAiB,CAAC8B,gBAAnB,CAD2B,CAAlC;AAGP,OAAO,MAAMC,aAAa,GAAG7B,WAAW,CAAEe,KAAD,IACvChB,YAAY,CAACD,iBAAiB,CAACgC,eAAnB,EAAoCf,KAApC,CAD0B,CAAjC","sourcesContent":["import { USER_ACTION_TYPES } from './user.types';\nimport { createAction, withMatcher, Action, ActionWithPayload } from '../../utils/reducer/reducer.utils';\nimport { UserData, AdditionalInformation } from '../../utils/firebase/firebase.utils';\nimport { type } from 'os';\n\n\nexport type CheckUserSession = Action<USER_ACTION_TYPES.CHECK_USER_SESSION>;\nexport type SetCurrentUser = ActionWithPayload<USER_ACTION_TYPES.SET_CURRENT_USER, UserData>;\nexport type GoogleSignInStart = Action<USER_ACTION_TYPES.GOOGLE_SIGN_IN_START>;\nexport type EmailSignInStart = ActionWithPayload<USER_ACTION_TYPES.EMAIL_SIGN_IN_START, { email:string, password: string; }>;\n// export type SignInSuccess = ActionWithPayload<>;\n// export type SignInFailed = ActionWithPayload<>;\nexport type SignUpStart = ActionWithPayload<USER_ACTION_TYPES.SIGN_UP_START, { email:string, password: string, displayName: string; }>;\n// export type SignUpSuccess = ActionWithPayload<>;\n// export type SignUpFailed = ActionWithPayload<>;\n// export type SignOutStart = ActionWithPayload<>;\n// export type SignOutSuccess = ActionWithPayload<>;\n// export type SignOutFailed = ActionWithPayload<>;\n\n\nexport const checkUserSession = withMatcher(() =>\n  createAction(USER_ACTION_TYPES.CHECK_USER_SESSION));\n\nexport const setCurrentUser = withMatcher((user: UserData) =>\n  createAction(USER_ACTION_TYPES.SET_CURRENT_USER, user));\n\nexport const googleSignInStart = withMatcher(() =>\n  createAction(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START));\n\nexport const emailSignInStart = withMatcher((email: string, password: string) =>\n  createAction(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, { email, password }));\n\nexport const signInSuccess = (user: UserData) =>\n  createAction(USER_ACTION_TYPES.SIGN_IN_SUCCESS, user);\n\nexport const signInFailed = (error: Error) =>\n  createAction(USER_ACTION_TYPES.SIGN_IN_FAILED, error);\n  \n//\nexport const signUpStart = withMatcher((\n  email:string, password:string, displayName:string) =>\n  createAction(USER_ACTION_TYPES.SIGN_UP_START, {\n    email,\n    password,\n    displayName,\n  }));\n\nexport const signUpSuccess = withMatcher((user: uer, additionalDetails) =>\n  createAction(USER_ACTION_TYPES.SIGN_UP_SUCCESS, { user, additionalDetails }));\n\nexport const signUpFailed = withMatcher((error: Error) =>\n  createAction(USER_ACTION_TYPES.SIGN_UP_FAILED, error));\n\nexport const signOutStart = withMatcher(() =>\n  createAction(USER_ACTION_TYPES.SIGN_OUT_START));\n\nexport const signOutSuccess = withMatcher(() =>\n  createAction(USER_ACTION_TYPES.SIGN_OUT_SUCCESS));\n\nexport const signOutFailed = withMatcher((error: Error) =>\n  createAction(USER_ACTION_TYPES.SIGN_OUT_FAILED, error));"]},"metadata":{},"sourceType":"module"}