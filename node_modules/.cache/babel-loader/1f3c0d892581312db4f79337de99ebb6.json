{"ast":null,"code":"import { setCartItems, setIsCartOpen } from './cart.action';\nexport const CART_INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: []\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CART_INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // const { type, payload } = action;\n  if (setIsCartOpen.match(action)) {\n    return { ...state,\n      isCartOpen: action.payload\n    };\n  }\n\n  if (setCartItems.match(action)) {\n    return { ...state,\n      cartItems: action.payload\n    };\n  }\n\n  return state; // switch (type) {\n  //   case CART_ACTION_TYPES.SET_CART_ITEMS:\n  //     return {\n  //       ...state,\n  //       cartItems: payload,\n  //     };\n  // case CART_ACTION_TYPES.SET_IS_CART_OPEN:\n  //   return {\n  //     ...state,\n  //     isCartOpen: payload,\n  //   };\n  //   default:\n  //     return state;\n  // }\n};","map":{"version":3,"sources":["/Users/nanye/Desktop/crwn-clothing/src/store/cart/cart.reducer.ts"],"names":["setCartItems","setIsCartOpen","CART_INITIAL_STATE","isCartOpen","cartItems","cartReducer","state","action","match","payload"],"mappings":"AACA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAQA,OAAO,MAAMC,kBAA6B,GAAG;AACzCC,EAAAA,UAAU,EAAE,KAD6B;AAEzCC,EAAAA,SAAS,EAAE;AAF8B,CAAtC;AAKL,OAAO,MAAMC,WAAW,GAAG,YAA8D;AAAA,MAA7DC,KAA6D,uEAArDJ,kBAAqD;AAAA,MAAjCK,MAAiC;;AACvF;AAEA,MAAGN,aAAa,CAACO,KAAd,CAAoBD,MAApB,CAAH,EAAgC;AAC9B,WAAO,EACL,GAAGD,KADE;AAELH,MAAAA,UAAU,EAAEI,MAAM,CAACE;AAFd,KAAP;AAID;;AAED,MAAGT,YAAY,CAACQ,KAAb,CAAmBD,MAAnB,CAAH,EAA8B;AAC5B,WAAO,EACL,GAAGD,KADE;AAELF,MAAAA,SAAS,EAAEG,MAAM,CAACE;AAFb,KAAP;AAID;;AAED,SAAOH,KAAP,CAjBuF,CAkBvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAhCM","sourcesContent":["import { AnyAction } from 'redux';\nimport { setCartItems, setIsCartOpen } from './cart.action';\nimport { CartItem, CART_ACTION_TYPES } from './cart.types';\n\nexport type CartState = {\n  isCartOpen: boolean;\n  cartItems: CartItem[];\n}\n\nexport const CART_INITIAL_STATE: CartState = {\n    isCartOpen: false,\n    cartItems: [],\n  };\n  \n  export const cartReducer = (state = CART_INITIAL_STATE, action: AnyAction): CartState => {\n    // const { type, payload } = action;\n  \n    if(setIsCartOpen.match(action)) {\n      return {\n        ...state,\n        isCartOpen: action.payload,\n      };\n    }\n  \n    if(setCartItems.match(action)){\n      return {\n        ...state,\n        cartItems: action.payload,\n      };\n    }\n    \n    return state;\n    // switch (type) {\n    //   case CART_ACTION_TYPES.SET_CART_ITEMS:\n    //     return {\n    //       ...state,\n    //       cartItems: payload,\n    //     };\n    // case CART_ACTION_TYPES.SET_IS_CART_OPEN:\n    //   return {\n    //     ...state,\n    //     isCartOpen: payload,\n    //   };\n    //   default:\n    //     return state;\n    // }\n  };"]},"metadata":{},"sourceType":"module"}