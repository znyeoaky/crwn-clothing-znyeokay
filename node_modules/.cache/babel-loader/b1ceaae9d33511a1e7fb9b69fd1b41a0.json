{"ast":null,"code":"var _jsxFileName = \"/Users/nanye/Desktop/crwn-clothing/src/contexts/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useReducer } from 'react';\nimport { createAction } from '../utils/reducer/reducer.utils'; // const addCartItem = (cartItems, productToAdd) => {\n//   const existingCartItem = cartItems.find(\n//     (cartItem) => cartItem.id === productToAdd.id\n//   );\n//   if (existingCartItem) {\n//     return cartItems.map((cartItem) =>\n//       cartItem.id === productToAdd.id\n//         ? { ...cartItem, quantity: cartItem.quantity + 1 }\n//         : cartItem\n//     );\n//   }\n//   return [...cartItems, { ...productToAdd, quantity: 1 }];\n// };\n// const removeCartItem = (cartItems, cartItemToRemove) => {\n//   // find the cart item to remove\n//   const existingCartItem = cartItems.find(\n//     (cartItem) => cartItem.id === cartItemToRemove.id\n//   );\n//   // check if quantity is equal to 1, if it is remove that item from the cart\n//   if (existingCartItem.quantity === 1) {\n//     return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n//   }\n//   // return back cartitems with matching cart item with reduced quantity\n//   return cartItems.map((cartItem) =>\n//     cartItem.id === cartItemToRemove.id\n//       ? { ...cartItem, quantity: cartItem.quantity - 1 }\n//       : cartItem\n//   );\n// };\n// const CART_ACTION_TYPES = {\n//   SET_IS_CART_OPEN: 'SET_IS_CART_OPEN',\n//   SET_CART_ITEMS: 'SET_CART_ITEMS',\n//   SET_CART_COUNT: 'SET_CART_COUNT',\n//   SET_CART_TOTAL: 'SET_CART_TOTAL',\n// };\n// const INITIAL_STATE = {\n//   isCartOpen: false,\n//   cartItems: [],\n//   cartCount: 0,\n//   cartTotal: 0,\n// };\n// const cartReducer = (state, action) => {\n//   const { type, payload } = action;\n//   switch (type) {\n//     case CART_ACTION_TYPES.SET_CART_ITEMS:\n//       return {\n//         ...state,\n//         ...payload,\n//       };\n//     default:\n//       throw new Error(`Unhandled type ${type} in cartReducer`);\n//   }\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [{\n    cartCount,\n    cartTotal,\n    cartItems\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n\n  const updateCartItemsReducer = cartItems => {\n    // const newCartCount = cartItems.reduce(\n    //   (total, cartItem) => total + cartItem.quantity,\n    //   0\n    // );\n    // const newCartTotal = cartItems.reduce(\n    //   (total, cartItem) => total + cartItem.quantity * cartItem.price,\n    //   0\n    // );\n    const payload = {\n      cartItems,\n      cartCount: newCartCount,\n      cartTotal: newCartTotal\n    };\n    dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, payload));\n  }; // const addItemToCart = (productToAdd) => {\n  //   const newCartItems = addCartItem(cartItems, productToAdd);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n  // const removeItemToCart = (cartItemToRemove) => {\n  //   const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n  // const clearItemFromCart = (cartItemToClear) => {\n  //   const newCartItems = clearCartItem(cartItems, cartItemToClear);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"Pi96wqJ5DC/xVGqzCIB7CytznYc=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useReducer","createAction","clearCartItem","cartItems","cartItemToClear","filter","cartItem","id","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","CartProvider","children","dispatch","cartReducer","INITIAL_STATE","updateCartItemsReducer","payload","newCartCount","newCartTotal","CART_ACTION_TYPES","SET_CART_ITEMS","value","removeItemToCart"],"sources":["/Users/nanye/Desktop/crwn-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useReducer } from 'react';\n\nimport { createAction } from '../utils/reducer/reducer.utils';\n\n// const addCartItem = (cartItems, productToAdd) => {\n//   const existingCartItem = cartItems.find(\n//     (cartItem) => cartItem.id === productToAdd.id\n//   );\n\n//   if (existingCartItem) {\n//     return cartItems.map((cartItem) =>\n//       cartItem.id === productToAdd.id\n//         ? { ...cartItem, quantity: cartItem.quantity + 1 }\n//         : cartItem\n//     );\n//   }\n\n//   return [...cartItems, { ...productToAdd, quantity: 1 }];\n// };\n\n// const removeCartItem = (cartItems, cartItemToRemove) => {\n//   // find the cart item to remove\n//   const existingCartItem = cartItems.find(\n//     (cartItem) => cartItem.id === cartItemToRemove.id\n//   );\n\n//   // check if quantity is equal to 1, if it is remove that item from the cart\n//   if (existingCartItem.quantity === 1) {\n//     return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n//   }\n\n//   // return back cartitems with matching cart item with reduced quantity\n//   return cartItems.map((cartItem) =>\n//     cartItem.id === cartItemToRemove.id\n//       ? { ...cartItem, quantity: cartItem.quantity - 1 }\n//       : cartItem\n//   );\n// };\n\n// const CART_ACTION_TYPES = {\n//   SET_IS_CART_OPEN: 'SET_IS_CART_OPEN',\n//   SET_CART_ITEMS: 'SET_CART_ITEMS',\n//   SET_CART_COUNT: 'SET_CART_COUNT',\n//   SET_CART_TOTAL: 'SET_CART_TOTAL',\n// };\n\n// const INITIAL_STATE = {\n//   isCartOpen: false,\n//   cartItems: [],\n//   cartCount: 0,\n//   cartTotal: 0,\n// };\n\n// const cartReducer = (state, action) => {\n//   const { type, payload } = action;\n\n//   switch (type) {\n//     case CART_ACTION_TYPES.SET_CART_ITEMS:\n//       return {\n//         ...state,\n//         ...payload,\n//       };\n//     default:\n//       throw new Error(`Unhandled type ${type} in cartReducer`);\n//   }\n// };\n\nconst clearCartItem = (cartItems, cartItemToClear) =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  const [{ cartCount, cartTotal, cartItems }, dispatch] = useReducer(\n    cartReducer,\n    INITIAL_STATE\n  );\n\n  const updateCartItemsReducer = (cartItems) => {\n    // const newCartCount = cartItems.reduce(\n    //   (total, cartItem) => total + cartItem.quantity,\n    //   0\n    // );\n\n    // const newCartTotal = cartItems.reduce(\n    //   (total, cartItem) => total + cartItem.quantity * cartItem.price,\n    //   0\n    // );\n\n    const payload = {\n      cartItems,\n      cartCount: newCartCount,\n      cartTotal: newCartTotal,\n    };\n\n    dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, payload));\n  };\n\n  // const addItemToCart = (productToAdd) => {\n  //   const newCartItems = addCartItem(cartItems, productToAdd);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n\n  // const removeItemToCart = (cartItemToRemove) => {\n  //   const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n\n  // const clearItemFromCart = (cartItemToClear) => {\n  //   const newCartItems = clearCartItem(cartItems, cartItemToClear);\n  //   updateCartItemsReducer(newCartItems);\n  // };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,OAApD;AAEA,SAASC,YAAT,QAA6B,gCAA7B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,aAAa,GAAG,CAACC,SAAD,EAAYC,eAAZ,KACpBD,SAAS,CAACE,MAAV,CAAkBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBH,eAAe,CAACG,EAA/D,CADF;;AAGA,OAAO,MAAMC,WAAW,gBAAGV,aAAa,CAAC;EACvCW,UAAU,EAAE,KAD2B;EAEvCC,aAAa,EAAE,MAAM,CAAE,CAFgB;EAGvCP,SAAS,EAAE,EAH4B;EAIvCQ,aAAa,EAAE,MAAM,CAAE,CAJgB;EAKvCC,kBAAkB,EAAE,MAAM,CAAE,CALW;EAMvCC,iBAAiB,EAAE,MAAM,CAAE,CANY;EAOvCC,SAAS,EAAE,CAP4B;EAQvCC,SAAS,EAAE;AAR4B,CAAD,CAAjC;AAWP,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C,MAAM,CAACR,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;EAEA,MAAM,CAAC;IAAEe,SAAF;IAAaC,SAAb;IAAwBZ;EAAxB,CAAD,EAAsCe,QAAtC,IAAkDlB,UAAU,CAChEmB,WADgE,EAEhEC,aAFgE,CAAlE;;EAKA,MAAMC,sBAAsB,GAAIlB,SAAD,IAAe;IAC5C;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA,MAAMmB,OAAO,GAAG;MACdnB,SADc;MAEdW,SAAS,EAAES,YAFG;MAGdR,SAAS,EAAES;IAHG,CAAhB;IAMAN,QAAQ,CAACjB,YAAY,CAACwB,iBAAiB,CAACC,cAAnB,EAAmCJ,OAAnC,CAAb,CAAR;EACD,CAlBD,CAR4C,CA4B5C;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;;EAEA,MAAMK,KAAK,GAAG;IACZlB,UADY;IAEZC,aAFY;IAGZC,aAHY;IAIZiB,gBAJY;IAKZf,iBALY;IAMZV,SANY;IAOZW,SAPY;IAQZC;EARY,CAAd;EAWA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEY,KAA7B;IAAA,UAAqCV;EAArC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAvDM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}