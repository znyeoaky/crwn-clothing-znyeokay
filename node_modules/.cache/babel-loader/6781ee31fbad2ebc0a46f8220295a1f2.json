{"ast":null,"code":"var _jsxFileName = \"/Users/nanye/Desktop/crwn-clothing/src/components/payment-form/payment-form.component.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { selectCartTotal } from '../../store/cart/cart.selector';\nimport { selectCurrentUser } from '../../store/user/user.selector';\nimport { BUTTON_TYPE_CLASSES } from '../button/button.component';\nimport { FormContainer, PaymentButton, PaymentFormContainer } from './payment-form.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const amount = useSelector(selectCartTotal);\n  const currentUser = useSelector(selectCurrentUser);\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n\n  const paymentHandler = async e => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    setIsProcessingPayment(true);\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: amount * 100\n      })\n    }).then(res => res.json()); // console.log(response);\n\n    const {\n      paymentIntent: {\n        client_secret\n      }\n    } = response; // console.log(client_secret);\n\n    const cardDetails = elements.getElement(CardElement);\n    if (cardDetails === null) return;\n    const paymentResult = await stripe.confirmCardPayment(client_secret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: currentUser ? currentUser.displayName : 'Guest'\n        }\n      }\n    });\n    setIsProcessingPayment(false);\n\n    if (paymentResult.error) {\n      alert(paymentResult.error.message);\n    } else {\n      if (paymentResult.paymentIntent.status === 'succeeded') {\n        alert('Payment Successful!');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PaymentFormContainer, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: paymentHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Credit Card Payment: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(PaymentButton, {\n        isLoading: isProcessingPayment,\n        buttonType: BUTTON_TYPE_CLASSES.inverted,\n        children: \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentForm, \"zeZvNGpoSXJVIJ/CUzfiu8Kc5to=\", false, function () {\n  return [useStripe, useElements, useSelector, useSelector];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["useState","useSelector","CardElement","useStripe","useElements","selectCartTotal","selectCurrentUser","BUTTON_TYPE_CLASSES","FormContainer","PaymentButton","PaymentFormContainer","PaymentForm","stripe","elements","amount","currentUser","isProcessingPayment","setIsProcessingPayment","paymentHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","then","res","json","paymentIntent","client_secret","cardDetails","getElement","paymentResult","confirmCardPayment","payment_method","card","billing_details","name","displayName","error","alert","message","status","inverted"],"sources":["/Users/nanye/Desktop/crwn-clothing/src/components/payment-form/payment-form.component.tsx"],"sourcesContent":["import { useState, FormEvent } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\nimport { selectCartTotal } from '../../store/cart/cart.selector';\nimport { selectCurrentUser } from '../../store/user/user.selector';\n\nimport {BUTTON_TYPE_CLASSES} from '../button/button.component';\nimport { FormContainer, PaymentButton, PaymentFormContainer } from './payment-form.styles';\n\nconst PaymentForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const amount = useSelector(selectCartTotal);\n  const currentUser = useSelector(selectCurrentUser);\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n\n  const paymentHandler = async(e:FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if(!stripe || !elements){\n      return;\n    }\n    setIsProcessingPayment(true);\n\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method:'post',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ amount: amount * 100 }),\n    }).then(res => res.json());\n\n    // console.log(response);\n    const {paymentIntent: { client_secret }} = response;\n\n    // console.log(client_secret);\n\n    const cardDetails = elements.getElement(CardElement);\n    if(cardDetails === null) return;\n    const paymentResult = await stripe.confirmCardPayment(client_secret, {\n      payment_method:{\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: currentUser ? currentUser.displayName : 'Guest',\n        },      \n      }\n    })\n    setIsProcessingPayment(false);\n\n    if (paymentResult.error) {\n      alert(paymentResult.error.message);\n    } else {\n      if (paymentResult.paymentIntent.status === 'succeeded') {\n        alert('Payment Successful!');\n      }\n    }\n  };\n\n\n\n  return (\n    <PaymentFormContainer>\n      <FormContainer onSubmit={paymentHandler}>\n        <h2>Credit Card Payment: </h2>\n        <CardElement /><br />\n        <PaymentButton \n          isLoading={isProcessingPayment}\n          buttonType={BUTTON_TYPE_CLASSES.inverted}\n        >\n          Pay now\n        </PaymentButton>\n      </FormContainer>\n    </PaymentFormContainer>\n  );\n};\n\nexport default PaymentForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}